@using CheckersProject.Data;

@page "/checker"

<PageTitle>Checker</PageTitle>

<h1>Hello</h1>

@code {

    @* create the chucker board object *@
    CheckerBoard newBaord = new CheckerBoard(8, 8);

    @* create the checker object *@
    List<CheckerClass> blackCheckers = new List<CheckerClass>();
    List<CheckerClass> whiteCheckers = new List<CheckerClass>();

    CheckerClass? activeChecker = null;


    protected override void OnInitialized()
    {
        @* black Checkers *@
        for (int i = 0; i < 3; i++)
        {
            for (int j = (i + 1) % 2; j < 8; j += 2)
            {
                blackCheckers.Add(new CheckerClass
                {
                    Color = "black",
                    Column = j,
                    Row = i,
                    Direction = CheckerDirection.Down
                });
            }
        }
        @* white Checkers *@
        for (int i = 5; i < 8; i++)
        {
            for (int j = (i + 1) % 2; j < 8; j += 2)
            {
                whiteCheckers.Add(new CheckerClass
                {
                    Color = "white",
                    Column = j,
                    Row = i,
                    Direction = CheckerDirection.Up
                });
            }
        }

    }
}



<div class="board">

    @for (int i = 0; i < newBaord.Row; i++)
    {
        int localI = i;
        <div class="Row">

            @for (int j = 0; j < newBaord.Column; j++)
            {
                int localJ =j;
                var checker = blackCheckers.FirstOrDefault(n => n.Column == j && n.Row == i);
                if (checker == null)
                {
                    checker = whiteCheckers.FirstOrDefault(n => n.Column == j && n.Row == i);
                }

                <div class="Cell">
                    @if (checker != null)
                    {
                    <div @onclick="() => { activeChecker = checker;
                                        activeChecker.MovePiece();
                                        }"
                        class="checker @checker.Color @(checker == activeChecker ? "active" : "" )" ></div>
                    }
                </div>

            }
        </div>
    }

</div>